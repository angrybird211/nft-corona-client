{"version":3,"sources":["redux/reducers/userReducer.js","redux/action/types.js","redux/reducers/authReducer.js","redux/reducers/errorReducer.js","redux/reducers/index.js","redux/store/index.js","api/index.js","utils/setAuthToken.js","redux/action/authActions.js","state/toasts/index.js","state/hooks.js","utils/getRpcUrl.js","utils/web3React.js","utils/wallet.js","hooks/useAuth.js","hooks/useEagerConnect.js","components/common/footer.jsx","components/common/header.jsx","components/common/sidebar.jsx","components/common/layout.jsx","components/common/privateRoute.jsx","components/elements/pieChart.jsx","components/pages/index.jsx","components/elements/userList.jsx","components/pages/admin.jsx","components/pages/login.jsx","schema/auth.js","components/pages/register.jsx","components/pages/forgotPassword.jsx","components/elements/avatarEditor.jsx","components/pages/settings.jsx","App.js","serviceWorker.js","index.js"],"names":["initState","GET_ERRORS","SET_CURRENT_USER","isEmpty","require","initialState","isAuthenticated","isAdmin","rootReducer","combineReducers","user","state","action","type","payload","balance","reward","ownNfts","auth","role","avatar","userName","id","error","saveToLocalStorage","serialisedState","JSON","stringify","localStorage","setItem","e","console","warn","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducers","getItem","parse","loadFromLocalStorage","applyMiddleware","thunk","getState","subscribe","instance","axios","create","baseURL","setAuthToken","token","defaults","headers","common","setCurrentUser","decoded_data","toastsSlice","createSlice","name","data","reducers","push","toastIndex","findIndex","toast","splice","unshift","remove","clear","actions","toastTypes","nodes","process","ConnectorNames","rpcUrl","randomIndex","random","length","getNodeUrl","chainId","parseInt","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","connectorsByName","setupNetwork","a","provider","ethereum","request","method","params","toString","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","useAuth","useWeb3React","activate","deactivate","toastError","dispatch","useDispatch","useMemo","pushToast","title","description","kebabCase","toastInfo","toastSuccess","toastWarning","removeToast","clearToast","useToast","login","useCallback","connectorID","connector","UnsupportedChainIdError","walletConnectProvider","undefined","message","logout","useEagerConnect","useEffect","connectorId","Footer","className","href","target","rel","connect","useState","showProfile","setShowProfile","src","alt","placeholder","onClick","to","Layout","children","Component","component","rest","render","props","DoughnutDemo","legend","setLegend","doughnut","useRef","values","current","chartInstance","legendItems","ref","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","borderWidth","options","display","map","item","text","Dashboard","UserList","isApproveOpen","setOpenAprrove","isRoleOpen","setOpenRole","approved","isApproved","setApproveStatus","setRole","toggleApproveState","status","setUserRole","firstName","lastName","email","city","country","walletAddress","put","_id","then","res","catch","err","alert","response","msg","users","setUsers","get","style","width","index","Login","initialValues","password","onSubmit","info","userData","btoa","post","success","decoded","jwt_decode","location","loginUser","SignupSchema","Yup","shape","min","max","required","password2","UpdateSchema","bioText","Register","validationSchema","history","registerUser","ForgotPassword","log","AvatarEditor","onChangeAvatar","setSrc","preview","setPreview","isOpenModal","setOpenModal","onClose","Modal","size","isOpen","toggle","centered","scrollable","height","onCrop","onBeforeFileLoad","elem","files","value","accept","onChange","URL","webkitURL","url","createObjectURL","avatarPath","setAvatarPath","setUser","atob","bio","updateUser","htmlFor","jwtToken","currentTime","Date","now","exp","removeItem","App","exact","path","Admin","Settings","Boolean","hostname","match","ReactDOM","getLibrary","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2aa56ca2.chunk.js","sourcesContent":["let initState = {};\r\n\r\nexport const userReducer = (state = initState, action) => {\r\n    const { type, payload } = action; //object destructring\r\n    switch (type) {\r\n        case \"BALANCE\":\r\n            return {\r\n                ...state,\r\n                balance: payload,\r\n            };\r\n        case \"USER_REWARD\":\r\n            return {\r\n                ...state,\r\n                reward: payload,\r\n            };\r\n        case \"USER_NFTS\":\r\n            return {\r\n                ...state,\r\n                ownNfts: payload,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\"; ","import { SET_CURRENT_USER } from \"../action/types\";\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n  isAuthenticated: false,\n  isAdmin: {},\n};\n\nexport const authReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(payload),\n        isAdmin: payload.role === 'admin' ? true : false,\n        avatar: payload.avatar,\n        userName: payload.userName,\n        id: payload.id\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS } from \"../action/types\";\n\nconst initialState = {};\n\nexport const errorReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_ERRORS:\n      return payload;\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\r\nimport { userReducer } from \"./userReducer\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { errorReducer } from \"./errorReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userReducer,\r\n  auth: authReducer,\r\n  error: errorReducer\r\n});\r\n\r\nexport default rootReducer;","// import { createStore, compose, applyMiddleware } from \"redux\";\r\n// import thunk from \"redux-thunk\";\r\n// import rootReducer from \"../reducers\";\r\n\r\n// // compose are enhancers used for composing middlewares for redux\r\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// const configureStore = () => {\r\n//   return createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n// };\r\n\r\n// const store = configureStore();\r\n//\r\n// export default store;\r\n\r\nimport { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducers from \"../reducers/index.js\";\r\n\r\n// convert object to string and store in localStorage\r\nfunction saveToLocalStorage(state) {\r\n  try {\r\n    const serialisedState = JSON.stringify(state);\r\n    localStorage.setItem(\"persistantState\", serialisedState);\r\n  } catch (e) {\r\n    console.warn(e);\r\n  }\r\n}\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n// load string from localStarage and convert into an Object\r\n// invalid output must be undefined\r\nfunction loadFromLocalStorage() {\r\n  try {\r\n    const serialisedState = localStorage.getItem(\"persistantState\");\r\n    if (serialisedState === null) return undefined;\r\n    return JSON.parse(serialisedState);\r\n  } catch (e) {\r\n    console.warn(e);\r\n    return undefined;\r\n  }\r\n}\r\n\r\n// create our store from our rootReducers and use loadFromLocalStorage\r\n// to overwrite any values that we already have saved\r\nconst store = createStore(rootReducers, loadFromLocalStorage(), composeEnhancers(applyMiddleware(thunk)));\r\n\r\n// listen for store changes and use saveToLocalStorage to\r\n// save them to localStorage\r\nsaveToLocalStorage(store.getState());\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));\r\n\r\nexport default store;","import axios from \"axios\";\r\n\r\nlet baseURL = \"https://nft-corona-server.vercel.app/\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: baseURL\r\n})\r\n\r\nexport default instance;","import axios from \"../api\";\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"authToken\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"authToken\"];\n  }\n};\nexport default setAuthToken;","import setAuthToken from \"../../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\n\nimport axios from \"../../api\";\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios.post(\"/users\", userData)\n    .then(res => {\n      window.location.href = \"./login\";\n    })\n    .catch(err => { alert(err.response.data.msg) })\n}\n\n// Login\nexport const loginUser = (userData) => dispatch => {\n  axios.post(\"/auth/login\", userData)\n    .then(res => {\n      const { success, token } = res.data;\n      // Set token to localStorage\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n      if (success) {\n        window.location.href = \"./dashboard\";\n      }\n    }\n    )\n    .catch(err => {\n      alert(err.response.data.msg);\n\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    })\n}\n\n// Get current user\nexport const getCurrentUser = (userData) => dispatch => {\n  axios.get(`/users/userByEmail`, userData)\n    .then(res => {\n      return res;\n      // window.location.href = \"./login\";\n    })\n    .catch(err => { alert(err.response.data.msg) })\n}\n\n// Get all users\nexport const getUsers = () => dispatch => {\n  axios.get(`/users`)\n    .then(res => {\n      console.log(\"Resutl are\", res);\n      return res;\n      // window.location.href = \"./login\";\n    })\n    .catch(err => { alert(err.response.data.msg) })\n}\n\n\n// Update user\nexport const updateUser = ({ id, userData }) => dispatch => {\n  console.log(\"user index is\", id);\n  axios.put(`/users/${id}`, userData)\n    .then(res => {\n      return res;\n      // window.location.href = \"./login\";\n    })\n    .catch(err => { alert(err.response.data.msg) })\n}\n\n// Set logged in user\nexport const setCurrentUser = decoded_data => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded_data\n  };\n};\n\n// Logout user\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n\n// Reset password\nexport const resetPassword = (email) => dispatch => {\n  axios.post(\"/auth/forgot-password\", email)\n    .then(res => { })\n    .catch(err => { console.log(\"error occured: \", err) })\n}\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  data: [],\r\n}\r\n\r\nexport const toastsSlice = createSlice({\r\n  name: 'toasts',\r\n  initialState,\r\n  reducers: {\r\n    push: (state, action) => {\r\n      const { payload } = action\r\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload.id)\r\n\r\n      // If id already matches remove it before adding it to the top of the stack\r\n      if (toastIndex >= 0) {\r\n        state.data.splice(toastIndex, 1)\r\n      }\r\n\r\n      state.data.unshift(payload)\r\n    },\r\n    remove: (state, action) => {\r\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload)\r\n\r\n      if (toastIndex >= 0) {\r\n        state.data.splice(toastIndex, 1)\r\n      }\r\n    },\r\n    clear: (state) => {\r\n      state.data = []\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { clear, remove, push } = toastsSlice.actions\r\n\r\nexport default toastsSlice.reducer\r\n","import { useMemo } from 'react'\r\nimport { kebabCase } from 'lodash'\r\n// import { Toast, toastTypes } from '@babefinance/uikit'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n    push as pushToast,\r\n    remove as removeToast,\r\n    clear as clearToast,\r\n} from './actions'\r\n\r\nconst toastTypes = {\r\n    SUCCESS: \"string\",\r\n    DANGER: \"string\",\r\n    WARNING: \"string\",\r\n    INFO: \"string\",\r\n};\r\n\r\n\r\nexport const useToast = () => {\r\n    const dispatch = useDispatch()\r\n    const helpers = useMemo(() => {\r\n        const push = (toast) => dispatch(pushToast(toast))\r\n\r\n        return {\r\n            toastError: (title, description) => {\r\n                return push({ id: kebabCase(title), type: toastTypes.DANGER, title, description })\r\n            },\r\n            toastInfo: (title, description) => {\r\n                return push({ id: kebabCase(title), type: toastTypes.INFO, title, description })\r\n            },\r\n            toastSuccess: (title, description) => {\r\n                return push({ id: kebabCase(title), type: toastTypes.SUCCESS, title, description })\r\n            },\r\n            toastWarning: (title, description) => {\r\n                return push({ id: kebabCase(title), type: toastTypes.WARNING, title, description })\r\n            },\r\n            push,\r\n            remove: (id) => dispatch(removeToast(id)),\r\n            clear: () => dispatch(clearToast()),\r\n        }\r\n    }, [dispatch])\r\n\r\n    return helpers\r\n}","import random from 'lodash/random'\r\n\r\n// Array of available nodes to connect to\r\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\r\n\r\nconst getNodeUrl = () => {\r\n  const randomIndex = random(0, nodes.length - 1)\r\n  return nodes[randomIndex]\r\n}\r\n\r\nexport default getNodeUrl\r\n","import { InjectedConnector } from '@web3-react/injected-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\nimport { BscConnector } from '@binance-chain/bsc-connector'\r\nimport getNodeUrl from './getRpcUrl'\r\n\r\nconst ConnectorNames = {\r\n    Injected: \"injected\",\r\n    WalletConnect: \"walletconnect\",\r\n    BSC: \"bsc\"\r\n}\r\n\r\nconst POLLING_INTERVAL = 12000\r\nconst rpcUrl = getNodeUrl()\r\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n\r\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\r\n\r\nconst walletconnect = new WalletConnectConnector({\r\n    rpc: { [chainId]: rpcUrl },\r\n    chainId: 56,\r\n    bridge: 'https://bridge.walletconnect.org',\r\n    qrcode: true,\r\n    pollingInterval: POLLING_INTERVAL,\r\n})\r\n\r\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\r\n\r\nexport const connectorsByName = {\r\n    [ConnectorNames.Injected]: injected,\r\n    [ConnectorNames.WalletConnect]: walletconnect,\r\n    [ConnectorNames.BSC]: bscConnector,\r\n}\r\n\r\nexport const getLibrary = (provider) => {\r\n    return provider\r\n}\r\n","// Set of helper functions to facilitate wallet setup\r\n\r\nimport { nodes } from './getRpcUrl'\r\n\r\n/**\r\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\r\n * @returns {boolean} true if the setup succeeded, false otherwise\r\n */\r\nexport const setupNetwork = async () => {\r\n  const provider = (window).ethereum\r\n  if (provider) {\r\n    // const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n    const chainId = 56\r\n    try {\r\n      await provider.request({\r\n        method: 'wallet_addEthereumChain',\r\n        params: [\r\n          {\r\n            chainId: `0x${chainId.toString(16)}`,\r\n            chainName: 'Binance Smart Chain TestNet',\r\n            nativeCurrency: {\r\n              name: 'BNB',\r\n              symbol: 'bnb',\r\n              decimals: 18,\r\n            },\r\n            rpcUrls: nodes,\r\n            blockExplorerUrls: ['https://bscscan.com/'],\r\n            // blockExplorerUrls: ['https://testnet.bscscan.com/'],\r\n\r\n          },\r\n        ],\r\n      })\r\n      return true\r\n    } catch (error) {\r\n      console.error(error)\r\n      return false\r\n    }\r\n  } else {\r\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Prompt the user to add a custom token to metamask\r\n * @param tokenAddress\r\n * @param tokenSymbol\r\n * @param tokenDecimals\r\n * @param tokenImage\r\n * @returns {boolean} true if the token has been added, false otherwise\r\n */\r\nexport const registerToken = async (\r\n  tokenAddress,\r\n  tokenSymbol,\r\n  tokenDecimals,\r\n  tokenImage,\r\n) => {\r\n  const tokenAdded = await (window).ethereum.request({\r\n    method: 'wallet_watchAsset',\r\n    params: {\r\n      type: 'ERC20',\r\n      options: {\r\n        address: tokenAddress,\r\n        symbol: tokenSymbol,\r\n        decimals: tokenDecimals,\r\n        image: tokenImage,\r\n      },\r\n    },\r\n  })\r\n\r\n  return tokenAdded\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport { useToast } from '../state/hooks'\r\nimport { connectorsByName } from '../utils/web3React'\r\nimport { setupNetwork } from '../utils/wallet'\r\n\r\nconst useAuth = () => {\r\n  const { activate, deactivate } = useWeb3React()\r\n  const { toastError } = useToast()\r\n\r\n  \r\n  const login = useCallback((connectorID) => {\r\n      const connector = connectorsByName[connectorID]\r\n      if (connector) {\r\n      activate(connector, async (error) => {\r\n        if (error instanceof UnsupportedChainIdError) {\r\n          const hasSetup = await setupNetwork()\r\n          if (hasSetup) {\r\n            activate(connector)\r\n          }\r\n        } else {\r\n          connector.walletConnectProvider = undefined\r\n          toastError(error.name, error.message)\r\n        }\r\n      })\r\n    } else {\r\n      toastError(\"Can't find connector\", 'The connector config is wrong')\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return { login, logout: deactivate }\r\n}\r\n\r\nexport default useAuth\r\n","import { useEffect } from 'react'\r\nimport useAuth from './useAuth'\r\n\r\nconst ConnectorNames =  {\r\n    Injected : \"injected\",\r\n    WalletConnect : \"walletconnect\",\r\n    BSC : \"bsc\"\r\n}\r\n\r\n\r\nconst useEagerConnect = () => {\r\n  const { login } = useAuth()\r\n\r\n  useEffect(() => {\r\n    const connectorId = window.localStorage.getItem(\"connectorId\")\r\n\r\n    // Disable eager connect for BSC Wallet. Currently the BSC Wallet extension does not inject BinanceChain\r\n    // into the Window object in time causing it to throw an error\r\n    // TODO: Figure out an elegant way to listen for when the BinanceChain object is ready\r\n    if (connectorId && connectorId !== ConnectorNames.BSC) {\r\n      login(connectorId)\r\n    }\r\n  }, [login])\r\n}\r\n\r\nexport default useEagerConnect\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"d-sm-flex justify-content-center justify-content-sm-between\">\r\n                <span className=\"text-muted d-block text-center text-sm-left d-sm-inline-block\">Copyright © bootstrapdash.com 2021</span>\r\n                <span className=\"float-none float-sm-right d-block mt-1 mt-sm-0 text-center\"> Free <a href=\"https://www.bootstrapdash.com/bootstrap-admin-template/\" target=\"_blank\" rel=\"noreferrer\">Bootstrap admin template</a> from Bootstrapdash.com</span>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Header = ({ auth }) => {\r\n    const [showProfile, setShowProfile] = useState(false);\r\n\r\n    return (\r\n        <nav className=\"navbar p-0 fixed-top d-flex flex-row\">\r\n            <div className=\"navbar-brand-wrapper d-flex d-lg-none align-items-center justify-content-center\">\r\n                <a className=\"navbar-brand brand-logo-mini\" href=\"index.html\"><img src=\"./images/logo-mini.svg\" alt=\"logo\" /></a>\r\n            </div>\r\n            <div className=\"navbar-menu-wrapper flex-grow d-flex align-items-stretch\">\r\n                <button className=\"navbar-toggler navbar-toggler align-self-center\" type=\"button\" data-toggle=\"minimize\">\r\n                    <span className=\"mdi mdi-menu\"></span>\r\n                </button>\r\n                <ul className=\"navbar-nav w-100\">\r\n                    <li className=\"nav-item w-100\">\r\n                        <form className=\"nav-link mt-2 mt-md-0 d-none d-lg-flex search\">\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Search products\" />\r\n                        </form>\r\n                    </li>\r\n                </ul>\r\n                <ul className=\"navbar-nav navbar-nav-right\">\r\n                    <li className=\"nav-item dropdown d-none d-lg-block\">\r\n                        <a className=\"nav-link btn btn-success create-new-button\" id=\"createbuttonDropdown\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" href=\"/dashboard\">+ Create New Art</a>\r\n                        <div className=\"dropdown-menu dropdown-menu-right navbar-dropdown preview-list\" aria-labelledby=\"createbuttonDropdown\">\r\n                            <h6 className=\"p-3 mb-0\">Projects</h6>\r\n                            <div className=\"dropdown-divider\"></div>\r\n                            <a className=\"dropdown-item preview-item\" href=\"/dashboard\">\r\n                                <div className=\"preview-thumbnail\">\r\n                                    <div className=\"preview-icon bg-dark rounded-circle\">\r\n                                        <i className=\"mdi mdi-file-outline text-primary\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"preview-item-content\">\r\n                                    <p className=\"preview-subject ellipsis mb-1\">Software Development</p>\r\n                                </div>\r\n                            </a>\r\n                            <div className=\"dropdown-divider\"></div>\r\n                            <a className=\"dropdown-item preview-item\" href=\"/dashboard\">\r\n                                <div className=\"preview-thumbnail\">\r\n                                    <div className=\"preview-icon bg-dark rounded-circle\">\r\n                                        <i className=\"mdi mdi-web text-info\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"preview-item-content\">\r\n                                    <p className=\"preview-subject ellipsis mb-1\">UI Development</p>\r\n                                </div>\r\n                            </a>\r\n                            <div className=\"dropdown-divider\"></div>\r\n                            <a className=\"dropdown-item preview-item\" href=\"/dashboard\">\r\n                                <div className=\"preview-thumbnail\">\r\n                                    <div className=\"preview-icon bg-dark rounded-circle\">\r\n                                        <i className=\"mdi mdi-layers text-danger\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"preview-item-content\">\r\n                                    <p className=\"preview-subject ellipsis mb-1\">Software Testing</p>\r\n                                </div>\r\n                            </a>\r\n                            <div className=\"dropdown-divider\"></div>\r\n                            <p className=\"p-3 mb-0 text-center\">See all projects</p>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link count-indicator dropdown-toggle\" id=\"notificationDropdown\" href=\"/dashboard\" data-bs-toggle=\"dropdown\">\r\n                            <i className=\"mdi mdi-bell\"></i>\r\n                            <span className=\"count bg-danger\"></span>\r\n                        </a>\r\n                        <div className=\"dropdown-menu dropdown-menu-right navbar-dropdown preview-list\" aria-labelledby=\"notificationDropdown\">\r\n                            <h6 className=\"p-3 mb-0\">Notifications</h6>\r\n                            <div className=\"dropdown-divider\"></div>\r\n                            <a className=\"dropdown-item preview-item\" href=\"/dashboard\">\r\n                                <div className=\"preview-thumbnail\">\r\n                                    <div className=\"preview-icon bg-dark rounded-circle\">\r\n                                        <i className=\"mdi mdi-calendar text-success\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"preview-item-content\">\r\n                                    <p className=\"preview-subject mb-1\">Event today</p>\r\n                                    <p className=\"text-muted ellipsis mb-0\"> Just a reminder that you have an event today </p>\r\n                                </div>\r\n                            </a>\r\n                            <div className=\"dropdown-divider\"></div>\r\n                            <a className=\"dropdown-item preview-item\" href=\"/dashboard\">\r\n                                <div className=\"preview-thumbnail\">\r\n                                    <div className=\"preview-icon bg-dark rounded-circle\">\r\n                                        <i className=\"mdi mdi-settings text-danger\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"preview-item-content\">\r\n                                    <p className=\"preview-subject mb-1\">Settings</p>\r\n                                    <p className=\"text-muted ellipsis mb-0\"> Update dashboard </p>\r\n                                </div>\r\n                            </a>\r\n                            <div className=\"dropdown-divider\"></div>\r\n                            <a className=\"dropdown-item preview-item\" href=\"/dashboard\">\r\n                                <div className=\"preview-thumbnail\">\r\n                                    <div className=\"preview-icon bg-dark rounded-circle\">\r\n                                        <i className=\"mdi mdi-link-variant text-warning\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"preview-item-content\">\r\n                                    <p className=\"preview-subject mb-1\">Launch Admin</p>\r\n                                    <p className=\"text-muted ellipsis mb-0\"> New admin wow! </p>\r\n                                </div>\r\n                            </a>\r\n                            <div className=\"dropdown-divider\"></div>\r\n                            <p className=\"p-3 mb-0 text-center\">See all notifications</p>\r\n                        </div>\r\n                    </li>\r\n\r\n                    <li className=\"nav-item dropdown\">\r\n                        <button className=\"nav-link bg-transparent border-0\" id=\"profileDropdown\" href=\"#\" data-bs-toggle=\"dropdown\" onClick={() => setShowProfile(!showProfile)}>\r\n                            <div className=\"navbar-profile\">\r\n                                <img className=\"img-xs rounded-circle\" src={auth.avatar} alt=\"\" />\r\n                                <p className=\"mb-0 d-none d-sm-block navbar-profile-name\">{auth.userName}</p>\r\n                                <i className=\"mdi mdi-menu-down d-none d-sm-block\"></i>\r\n                            </div>\r\n                        </button>\r\n\r\n                        <div className={`dropdown-menu dropdown-menu-right navbar-dropdown preview-list ${showProfile ? 'show' : ''}`} aria-labelledby=\"profileDropdown\">\r\n                            <h6 className=\"p-3 mb-0\">Profile</h6>\r\n                            <div className=\"dropdown-divider\"></div>\r\n                            <Link className=\"dropdown-item preview-item\" to=\"/settings\">\r\n                                <div className=\"preview-thumbnail\">\r\n                                    <div className=\"preview-icon bg-dark rounded-circle\">\r\n                                        <i className=\"mdi mdi-settings text-success\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"preview-item-content\">\r\n                                    <p className=\"preview-subject mb-1\">Settings</p>\r\n                                </div>\r\n                            </Link>\r\n                            <div className=\"dropdown-divider\"></div>\r\n                            <Link className=\"dropdown-item preview-item\" to=\"/login\" onClick={() => { localStorage.clear() }}>\r\n                                <div className=\"preview-thumbnail\">\r\n                                    <div className=\"preview-icon bg-dark rounded-circle\">\r\n                                        <i className=\"mdi mdi-logout text-danger\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"preview-item-content\">\r\n                                    <p className=\"preview-subject mb-1\">Log out</p>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n                <button className=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\" data-toggle=\"offcanvas\">\r\n                    <span className=\"mdi mdi-format-line-spacing\"></span>\r\n                </button>\r\n            </div>\r\n        </nav >\r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Sidebar = ({ auth, ...rest }) => {\r\n    return (\r\n        <nav className=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\r\n            <div className=\"sidebar-brand-wrapper d-none d-lg-flex align-items-center justify-content-center fixed-top\">\r\n                <a className=\"sidebar-brand brand-logo\" href=\"index.html\"><img src=\"./images/logo.svg\" alt=\"logo\" /></a>\r\n                <a className=\"sidebar-brand brand-logo-mini\" href=\"index.html\"><img src=\"./images/logo-mini.svg\" alt=\"logo\" /></a>\r\n            </div>\r\n            <ul className=\"nav\">\r\n                <li className=\"nav-item nav-category\">\r\n                    <span className=\"nav-link\">Navigation</span>\r\n                </li>\r\n                <li className=\"nav-item menu-items\">\r\n                    <Link className=\"nav-link\" to=\"/dashboard\">\r\n                        <span className=\"menu-icon\">\r\n                            <i className=\"mdi mdi-speedometer\"></i>\r\n                        </span>\r\n                        <span className=\"menu-title\">Dashboard</span>\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item menu-items\">\r\n                    <Link className=\"nav-link\" to=\"/my-art\">\r\n                        <span className=\"menu-icon\">\r\n                            <i className=\"mdi mdi-table-large\"></i>\r\n                        </span>\r\n                        <span className=\"menu-title\">My Art</span>\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item menu-items\">\r\n                    <Link className=\"nav-link\" to=\"/history\">\r\n                        <span className=\"menu-icon\">\r\n                            <i className=\"mdi mdi-chart-bar\"></i>\r\n                        </span>\r\n                        <span className=\"menu-title\">History</span>\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item menu-items\">\r\n                    {\r\n                        auth.isAdmin ?\r\n                            <Link className=\"nav-link\" data-bs-toggle=\"collapse\" to=\"/admin\" aria-expanded=\"false\" aria-controls=\"auth\">\r\n                                <span className=\"menu-icon\">\r\n                                    <i className=\"mdi mdi-security\"></i>\r\n                                </span>\r\n                                <span className=\"menu-title\">Admin</span>\r\n                            </Link>\r\n                            : \"\"\r\n                    }\r\n                    <div className=\"collapse\" id=\"auth\">\r\n                        <ul className=\"nav flex-column sub-menu\">\r\n                            <li className=\"nav-item\"> <a className=\"nav-link\" href=\"pages/samples/blank-page.html\"> Blank Page </a></li>\r\n                            <li className=\"nav-item\"> <a className=\"nav-link\" href=\"pages/samples/error-404.html\"> 404 </a></li>\r\n                            <li className=\"nav-item\"> <a className=\"nav-link\" href=\"pages/samples/error-500.html\"> 500 </a></li>\r\n                            <li className=\"nav-item\"> <a className=\"nav-link\" href=\"pages/samples/login.html\"> Login </a></li>\r\n                            <li className=\"nav-item\"> <a className=\"nav-link\" href=\"pages/samples/register.html\"> Register </a></li>\r\n                        </ul>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nSidebar.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(Sidebar);","import React from 'react';\r\nimport Footer from './footer';\r\n\r\nimport Header from './header';\r\nimport Sidebar from './sidebar';\r\n\r\nconst Layout = ({ children }) => {\r\n    return (\r\n        <div className=\"container-scroller\">\r\n            <Sidebar />\r\n\r\n            <div className=\"container-fluid page-body-wrapper\">\r\n                <Header />\r\n\r\n                <div className=\"main-panel\">\r\n                    {children}\r\n\r\n                    <Footer />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nconst DoughnutDemo = () => {\r\n    const [legend, setLegend] = useState([]);\r\n    const doughnut = useRef(null);\r\n\r\n    const values = {\r\n        \"Cache\": 425,\r\n        \"Stripe\": 236,\r\n        \"Paypal\": 593\r\n    }\r\n\r\n    const data = {\r\n        labels: [\"Paypal\", \"Stripe\", \"Cache\"],\r\n        datasets: [\r\n            {\r\n                label: \"Transaction History\",\r\n                fill: true,\r\n                lineTension: 0.1,\r\n                backgroundColor: [\r\n                    '#111',\r\n                    '#00d25b',\r\n                    '#ffab00'\r\n                ],\r\n                borderColor: \"transparent\",\r\n                borderCapStyle: \"butt\",\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: \"miter\",\r\n                pointBorderColor: \"rgba(75,192,192,1)\",\r\n                pointBackgroundColor: \"#fff\",\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 3,\r\n                pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n                pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n                pointHoverBorderWidth: 13,\r\n                pointRadius: 1,\r\n                pointHitRadius: 3,\r\n                borderWidth: 3,\r\n                data: [593, 425, 236]\r\n            }\r\n        ]\r\n    };\r\n\r\n    useEffect(() => {\r\n        setLegend(doughnut.current.chartInstance.legend.legendItems);\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Doughnut\r\n                ref={doughnut}\r\n                data={data}\r\n                options={{\r\n                    legend: {\r\n                        display: false\r\n                    }\r\n                }}\r\n            />\r\n            {legend.length &&\r\n                legend.map(item => {\r\n                    return (\r\n                        item.text !== 'Cache' ?\r\n                            <div className=\"bg-gray-dark d-flex d-md-block d-xl-flex flex-row py-3 px-4 px-md-3 px-xl-4 rounded mt-3\" key={`payment-${item.text}`}>\r\n                                <div className=\"text-md-center text-xl-left\">\r\n                                    <h6 className=\"mb-1\">Transfer to {item.text}</h6>\r\n                                    <p className=\"text-muted mb-0\">07 Jan 2019, 09:12AM</p>\r\n                                </div>\r\n                                <div className=\"align-self-center flex-grow text-right text-md-center text-xl-right py-md-2 py-xl-0\">\r\n                                    <h6 className=\"font-weight-bold mb-0\">${values[item.text]}</h6>\r\n                                </div>\r\n                            </div>\r\n                            : \"\"\r\n                    );\r\n                })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DoughnutDemo;","import React from 'react';\r\n\r\nimport PieChart from '../elements/pieChart';\r\n\r\nconst Dashboard = props => {\r\n    return (\r\n        <div className=\"content-wrapper\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4 grid-margin stretch-card\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h4 className=\"card-title\">Transaction History</h4>\r\n                            <PieChart />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-8 grid-margin stretch-card\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"d-flex flex-row justify-content-between\">\r\n                                <h4 className=\"card-title mb-1\">Open Projects</h4>\r\n                                <p className=\"text-muted mb-1\">Your data status</p>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"preview-list\">\r\n                                        <div className=\"preview-item border-bottom\">\r\n                                            <div className=\"preview-thumbnail\">\r\n                                                <div className=\"preview-icon bg-primary\">\r\n                                                    <i className=\"mdi mdi-file-document\"></i>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"preview-item-content d-sm-flex flex-grow\">\r\n                                                <div className=\"flex-grow\">\r\n                                                    <h6 className=\"preview-subject\">Admin dashboard design</h6>\r\n                                                    <p className=\"text-muted mb-0\">Broadcast web app mockup</p>\r\n                                                </div>\r\n                                                <div className=\"me-auto text-sm-right pt-2 pt-sm-0\">\r\n                                                    <p className=\"text-muted\">15 minutes ago</p>\r\n                                                    <p className=\"text-muted mb-0\">30 tasks, 5 issues </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"preview-item border-bottom\">\r\n                                            <div className=\"preview-thumbnail\">\r\n                                                <div className=\"preview-icon bg-success\">\r\n                                                    <i className=\"mdi mdi-cloud-download\"></i>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"preview-item-content d-sm-flex flex-grow\">\r\n                                                <div className=\"flex-grow\">\r\n                                                    <h6 className=\"preview-subject\">Wordpress Development</h6>\r\n                                                    <p className=\"text-muted mb-0\">Upload new design</p>\r\n                                                </div>\r\n                                                <div className=\"me-auto text-sm-right pt-2 pt-sm-0\">\r\n                                                    <p className=\"text-muted\">1 hour ago</p>\r\n                                                    <p className=\"text-muted mb-0\">23 tasks, 5 issues </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"preview-item border-bottom\">\r\n                                            <div className=\"preview-thumbnail\">\r\n                                                <div className=\"preview-icon bg-info\">\r\n                                                    <i className=\"mdi mdi-clock\"></i>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"preview-item-content d-sm-flex flex-grow\">\r\n                                                <div className=\"flex-grow\">\r\n                                                    <h6 className=\"preview-subject\">Project meeting</h6>\r\n                                                    <p className=\"text-muted mb-0\">New project discussion</p>\r\n                                                </div>\r\n                                                <div className=\"me-auto text-sm-right pt-2 pt-sm-0\">\r\n                                                    <p className=\"text-muted\">35 minutes ago</p>\r\n                                                    <p className=\"text-muted mb-0\">15 tasks, 2 issues</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"preview-item border-bottom\">\r\n                                            <div className=\"preview-thumbnail\">\r\n                                                <div className=\"preview-icon bg-danger\">\r\n                                                    <i className=\"mdi mdi-email-open\"></i>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"preview-item-content d-sm-flex flex-grow\">\r\n                                                <div className=\"flex-grow\">\r\n                                                    <h6 className=\"preview-subject\">Broadcast Mail</h6>\r\n                                                    <p className=\"text-muted mb-0\">Sent release details to team</p>\r\n                                                </div>\r\n                                                <div className=\"me-auto text-sm-right pt-2 pt-sm-0\">\r\n                                                    <p className=\"text-muted\">55 minutes ago</p>\r\n                                                    <p className=\"text-muted mb-0\">35 tasks, 7 issues </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"preview-item\">\r\n                                            <div className=\"preview-thumbnail\">\r\n                                                <div className=\"preview-icon bg-warning\">\r\n                                                    <i className=\"mdi mdi-chart-pie\"></i>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"preview-item-content d-sm-flex flex-grow\">\r\n                                                <div className=\"flex-grow\">\r\n                                                    <h6 className=\"preview-subject\">UI Design</h6>\r\n                                                    <p className=\"text-muted mb-0\">New application planning</p>\r\n                                                </div>\r\n                                                <div className=\"me-auto text-sm-right pt-2 pt-sm-0\">\r\n                                                    <p className=\"text-muted\">50 minutes ago</p>\r\n                                                    <p className=\"text-muted mb-0\">27 tasks, 4 issues </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-4 grid-margin\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h5>Commission</h5>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-8 col-sm-12 col-xl-8 my-auto\">\r\n                                    <div className=\"d-flex d-sm-block d-md-flex align-items-center\">\r\n                                        <h2 className=\"mb-0\">$32123</h2>\r\n                                        <p className=\"text-success ms-2 mb-0 font-weight-medium\">+3.5%</p>\r\n                                    </div>\r\n                                    <h6 className=\"text-muted font-weight-normal\">11.38% Since last month</h6>\r\n                                </div>\r\n                                <div className=\"col-4 col-sm-12 col-xl-4 text-center text-xl-right\">\r\n                                    <i className=\"icon-lg mdi mdi-codepen text-primary ms-auto\"></i>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-4 grid-margin\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h5>Sales</h5>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-8 col-sm-12 col-xl-8 my-auto\">\r\n                                    <div className=\"d-flex d-sm-block d-md-flex align-items-center\">\r\n                                        <h2 className=\"mb-0\">$45850</h2>\r\n                                        <p className=\"text-success ms-2 mb-0 font-weight-medium\">+8.3%</p>\r\n                                    </div>\r\n                                    <h6 className=\"text-muted font-weight-normal\"> 9.61% Since last month</h6>\r\n                                </div>\r\n                                <div className=\"col-4 col-sm-12 col-xl-4 text-center text-xl-right\">\r\n                                    <i className=\"icon-lg mdi mdi-wallet-travel text-danger ms-auto\"></i>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-4 grid-margin\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h5>Transfers</h5>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-8 col-sm-12 col-xl-8 my-auto\">\r\n                                    <div className=\"d-flex d-sm-block d-md-flex align-items-center\">\r\n                                        <h2 className=\"mb-0\">$2039</h2>\r\n                                        <p className=\"text-danger ms-2 mb-0 font-weight-medium\">-2.1% </p>\r\n                                    </div>\r\n                                    <h6 className=\"text-muted font-weight-normal\">2.27% Since last month</h6>\r\n                                </div>\r\n                                <div className=\"col-4 col-sm-12 col-xl-4 text-center text-xl-right\">\r\n                                    <i className=\"icon-lg mdi mdi-monitor text-success ms-auto\"></i>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row \">\r\n                <div className=\"col-12 grid-margin\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h4 className=\"card-title\">Artwork Sales</h4>\r\n                            <div className=\"table-responsive\">\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>\r\n                                                <div className=\"form-check form-check-muted m-0\">\r\n                                                    <label className=\"form-check-label\">\r\n                                                        <input type=\"checkbox\" className=\"form-check-input\" />\r\n                                                        <i className=\"input-helper\"></i>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </th>\r\n                                            <th> Artwork Thumb </th>\r\n                                            <th> Artwork Name </th>\r\n                                            <th> Previous Owner </th>\r\n                                            <th> Current Owner </th>\r\n                                            <th> Price Sold </th>\r\n                                            <th> Date </th>\r\n                                            <th> Payment Status </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <div className=\"form-check form-check-muted m-0\">\r\n                                                    <label className=\"form-check-label\">\r\n                                                        <input type=\"checkbox\" className=\"form-check-input\" />\r\n                                                        <i className=\"input-helper\"></i>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                <img src=\"./images/faces/face1.jpg\" alt=\"avatar\" />\r\n                                            </td>\r\n                                            <td> Art - 1 </td>\r\n                                            <td> Peter Grill </td>\r\n                                            <td> Henry Klein </td>\r\n                                            <td> 0.02 Ether </td>\r\n                                            <td> 04 Dec 2019 </td>\r\n                                            <td>\r\n                                                <div className=\"badge badge-outline-success\">Paypal</div>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <div className=\"form-check form-check-muted m-0\">\r\n                                                    <label className=\"form-check-label\">\r\n                                                        <input type=\"checkbox\" className=\"form-check-input\" />\r\n                                                        <i className=\"input-helper\"></i>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                <img src=\"./images/faces/face2.jpg\" alt=\"avatar\" />\r\n                                            </td>\r\n                                            <td> Art - 2 </td>\r\n                                            <td> Peter Grill </td>\r\n                                            <td> Tomas Petric </td>\r\n                                            <td> 0.01 Ether </td>\r\n                                            <td> 04 Dec 2019 </td>\r\n                                            <td>\r\n                                                <div className=\"badge badge-outline-warning\">Stripe</div>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <div className=\"form-check form-check-muted m-0\">\r\n                                                    <label className=\"form-check-label\">\r\n                                                        <input type=\"checkbox\" className=\"form-check-input\" />\r\n                                                        <i className=\"input-helper\"></i>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                <img src=\"./images/faces/face5.jpg\" alt=\"avatar\" />\r\n                                            </td>\r\n                                            <td> Art - 3 </td>\r\n                                            <td> Lucy Abbott </td>\r\n                                            <td> Henry Klein </td>\r\n                                            <td> 0.04 Ether </td>\r\n                                            <td> 04 Dec 2019 </td>\r\n                                            <td>\r\n                                                <div className=\"badge badge-outline-success\">Paypal</div>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <div className=\"form-check form-check-muted m-0\">\r\n                                                    <label className=\"form-check-label\">\r\n                                                        <input type=\"checkbox\" className=\"form-check-input\" />\r\n                                                        <i className=\"input-helper\"></i>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                <img src=\"./images/faces/face1.jpg\" alt=\"avatar\" />\r\n                                            </td>\r\n                                            <td> Art - 1 </td>\r\n                                            <td> Peter Grill </td>\r\n                                            <td> Henry Klein </td>\r\n                                            <td> 0.02 Ether </td>\r\n                                            <td> 04 Dec 2019 </td>\r\n                                            <td>\r\n                                                <div className=\"badge badge-outline-success\">Paypal</div>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <div className=\"form-check form-check-muted m-0\">\r\n                                                    <label className=\"form-check-label\">\r\n                                                        <input type=\"checkbox\" className=\"form-check-input\" />\r\n                                                        <i className=\"input-helper\"></i>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                <img src=\"./images/faces/face2.jpg\" alt=\"avatar\" />\r\n                                            </td>\r\n                                            <td> Art - 2 </td>\r\n                                            <td> Peter Grill </td>\r\n                                            <td> Tomas Petric </td>\r\n                                            <td> 0.01 Ether </td>\r\n                                            <td> 04 Dec 2019 </td>\r\n                                            <td>\r\n                                                <div className=\"badge badge-outline-warning\">Stripe</div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport axios from \"../../api\";\r\n\r\nconst UserList = ({ user }) => {\r\n    const [isApproveOpen, setOpenAprrove] = useState(false);\r\n    const [isRoleOpen, setOpenRole] = useState(false);\r\n    const [isApproved, setApproveStatus] = useState(user.approved);\r\n    const [role, setRole] = useState(user.role);\r\n\r\n    const toggleApproveDropdown = () => {\r\n        setOpenAprrove(!isApproveOpen);\r\n    }\r\n\r\n    const toggleApproveState = (status) => {\r\n        setApproveStatus(status);\r\n        setOpenAprrove(false);\r\n    }\r\n\r\n    const toggleRoleDropdown = () => {\r\n        setOpenRole(!isRoleOpen);\r\n    }\r\n\r\n    const setUserRole = (status) => {\r\n        setRole(status);\r\n        setOpenRole(false);\r\n    }\r\n\r\n    const updateUserInfo = () => {\r\n        // console.log(\"user is\", user._id);\r\n        // dispatch(updateUser({ id: user._id, userData: { ...user, approved: isApproved, role: role } }));\r\n        axios.put(`/users/${user._id}`, { ...user, approved: isApproved, role: role })\r\n            .then(res => {\r\n                return res;\r\n                // window.location.href = \"./login\";\r\n            })\r\n            .catch(err => { alert(err.response.data.msg) })\r\n    }\r\n\r\n    return (\r\n        <tr className=\"user-list\">\r\n            <td>\r\n                <img src={user.avatar} alt=\"avatar\" />\r\n                <span className=\"ps-2\">{`${user.firstName} ${user.lastName}`}</span>\r\n            </td>\r\n            <td> {user.email} </td>\r\n            <td> {user.city} </td>\r\n            <td> {user.country} </td>\r\n            <td> {user.walletAddress} </td>\r\n            <td>\r\n                <div className=\"dropdown\">\r\n                    <button className=\"btn btn-outline-success dropdown-toggle\" type=\"button\" onClick={toggleRoleDropdown}> {role} </button>\r\n                    <div className={`dropdown-menu ${isRoleOpen ? \"show\" : \"\"}`}>\r\n                        <button className=\"dropdown-item\" onClick={() => { setUserRole(\"admin\") }}>Admin</button>\r\n                        <button className=\"dropdown-item\" onClick={() => { setUserRole(\"customer\") }}>Customer</button>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div className=\"dropdown\">\r\n                    <button className=\"btn btn-outline-success dropdown-toggle\" type=\"button\" onClick={toggleApproveDropdown}> {isApproved ? \"Approved\" : \"Declined\"} </button>\r\n                    <div className={`dropdown-menu ${isApproveOpen ? \"show\" : \"\"}`}>\r\n                        <button className=\"dropdown-item\" onClick={() => { toggleApproveState(false) }}>Decline</button>\r\n                        <button className=\"dropdown-item\" onClick={() => { toggleApproveState(true) }}>Approve</button>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <button type=\"button\" className=\"btn btn-success btn-md\" onClick={updateUserInfo}>Update</button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nUserList.propTypes = {\r\n    auth: PropTypes.object\r\n};\r\n\r\nexport default UserList;","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport axios from '../../api';\r\nimport UserList from \"../elements/userList\";\r\n\r\nconst Admin = ({ auth }) => {\r\n    const [users, setUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // dispatch(getUsers());\r\n        axios.get(\"/users\").then(res => {\r\n            setUsers(res.data);\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <Route\r\n            render={props => auth.isAdmin ? (\r\n                <div className=\"content-wrapper admin-page\">\r\n                    <div className=\"row \">\r\n                        <div className=\"col-12 grid-margin\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <h4 className=\"card-title\">Users</h4>\r\n                                    <div className=\"table-responsive\">\r\n                                        <table className=\"table\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    {/* <th>\r\n                                                        <div className=\"form-check form-check-muted m-0\">\r\n                                                            <label className=\"form-check-label\">\r\n                                                                <input type=\"checkbox\" className=\"form-check-input\" />\r\n                                                                <i className=\"input-helper\"></i>\r\n                                                            </label>\r\n                                                        </div>\r\n                                                    </th> */}\r\n                                                    <th> Name </th>\r\n                                                    <th> Email </th>\r\n                                                    <th> City </th>\r\n                                                    <th> Country </th>\r\n                                                    <th> Wallet Address </th>\r\n                                                    <th> Role </th>\r\n                                                    <th> Status </th>\r\n                                                    <th style={{ width: \"100px\" }}></th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {\r\n                                                    users.map((user, index) =>\r\n                                                        <UserList key={`user-${index}`} user={user} />\r\n                                                    )\r\n                                                }\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>) :\r\n                (<Redirect to=\"/dashboard\"></Redirect>)\r\n            } />\r\n    )\r\n}\r\n\r\nAdmin.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(Admin);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Formik, Field, Form } from 'formik';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { loginUser } from '../../redux/action/authActions';\r\n\r\nconst Login = () => {\r\n    let dispatch = useDispatch();\r\n\r\n    const onSubmit = (info) => {\r\n        let userData = { email: info.email, password: window.btoa(info.password) };\r\n        dispatch(loginUser(userData));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-scroller\">\r\n            <div className=\"container-fluid page-body-wrapper full-page-wrapper\">\r\n                <div className=\"row w-100 m-0\">\r\n                    <div className=\"content-wrapper full-page-wrapper d-flex align-items-center auth login-bg\">\r\n                        <div className=\"card col-lg-4 mx-auto\">\r\n                            <div className=\"card-body px-5 py-5\">\r\n                                <h3 className=\"card-title text-left mb-3\">Login</h3>\r\n                                <Formik initialValues={{\r\n                                    email: '',\r\n                                    password: ''\r\n                                }}\r\n\r\n                                    onSubmit={onSubmit}>\r\n                                    <Form>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Username or email *</label>\r\n                                            <Field id=\"email\" name=\"email\" placeholder=\"input your email...\" className=\"form-control p_input\" />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Password *</label>\r\n                                            <Field type=\"password\" id=\"password\" name=\"password\" placeholder=\"input your password...\" className=\"form-control p_input\" />\r\n                                        </div>\r\n                                        <div className=\"form-group d-flex align-items-center justify-content-between\">\r\n                                            <div className=\"form-check\">\r\n                                                <label className=\"form-check-label\">\r\n                                                    <input type=\"checkbox\" className=\"form-check-input\" /> Remember me <i className=\"input-helper\"></i></label>\r\n                                            </div>\r\n                                            <Link to=\"/forgot-password\" className=\"forgot-pass\">Forgot password</Link>\r\n                                        </div>\r\n                                        <div className=\"text-center\">\r\n                                            <button type=\"submit\" className=\"btn btn-primary btn-block enter-btn mb-0\">Login</button>\r\n                                        </div>\r\n                                        <p className=\"sign-up\">Don't have an Account?<Link to=\"/register\"> Sign Up</Link></p>\r\n                                    </Form>\r\n                                </Formik>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import * as Yup from 'yup';\r\n\r\nexport const SignupSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n        .min(2, 'Too Short!')\r\n        .max(50, 'Too Long!')\r\n        .required('Required'),\r\n    lastName: Yup.string()\r\n        .min(2, 'Too Short!')\r\n        .max(50, 'Too Long!')\r\n        .required('Required'),\r\n    password: Yup.string()\r\n        .min(5, 'Too Short!')\r\n        .max(50, 'Too Long!')\r\n        .required('Required'),\r\n    password2: Yup.string()\r\n        .min(5, 'Too Short!')\r\n        .max(50, 'Too Long!')\r\n        .required('Required'),\r\n    email: Yup.string().email('Invalid email').required('Required'),\r\n});\r\n\r\nexport const UpdateSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n        .min(2, 'Too Short!')\r\n        .max(50, 'Too Long!'),\r\n    lastName: Yup.string()\r\n        .min(2, 'Too Short!')\r\n        .max(50, 'Too Long!'),\r\n    password: Yup.string()\r\n        .min(5, 'Too Short!')\r\n        .max(50, 'Too Long!'),\r\n    city: Yup.string()\r\n        .min(5, 'Too Short!')\r\n        .max(50, 'Too Long!'),\r\n    country: Yup.string()\r\n        .min(5, 'Too Short!')\r\n        .max(50, 'Too Long!'),\r\n    walletAddress: Yup.string()\r\n        .min(5, 'Too Short!')\r\n        .max(50, 'Too Long!'),\r\n    bioText: Yup.string()\r\n        .min(5, 'Too Short!'),\r\n    password2: Yup.string()\r\n        .min(5, 'Too Short!')\r\n        .max(50, 'Too Long!'),\r\n    email: Yup.string().email('Invalid email'),\r\n});","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { registerUser } from '../../redux/action/authActions';\r\nimport { SignupSchema } from '../../schema/auth';\r\n\r\nconst Register = () => {\r\n    let dispatch = useDispatch();\r\n\r\n    const onSubmit = (info) => {\r\n        let userData = { email: info.email, password: window.btoa(info.password), firstName: info.firstName, lastName: info.lastName };\r\n        dispatch(registerUser(userData));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-scroller\">\r\n            <div className=\"container-fluid page-body-wrapper full-page-wrapper\">\r\n                <div className=\"row w-100 m-0\">\r\n                    <div className=\"content-wrapper full-page-wrapper d-flex align-items-center auth login-bg\">\r\n                        <div className=\"card col-lg-4 mx-auto\">\r\n                            <div className=\"card-body px-5 py-5\">\r\n                                <h3 className=\"card-title text-left mb-3\">Register</h3>\r\n                                <Formik initialValues={{\r\n                                    email: '',\r\n                                    password: '',\r\n                                    password2: '',\r\n                                    name: ''\r\n                                }}\r\n                                    validationSchema={SignupSchema}\r\n                                    onSubmit={onSubmit}>\r\n                                    <Form>\r\n                                        <div className=\"form-group row\">\r\n                                            <div className=\"col\">\r\n                                                <label>First Name</label>\r\n                                                <Field id=\"firstName\" name=\"firstName\" className=\"form-control p_input\" />\r\n                                            </div>\r\n\r\n                                            <div className=\"col\">\r\n                                                <label>Last Name</label>\r\n                                                <Field id=\"lastName\" name=\"lastName\" className=\"form-control p_input\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Email</label>\r\n                                            <Field id=\"email\" name=\"email\" className=\"form-control p_input\" />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Password</label>\r\n                                            <Field type=\"password\" id=\"password\" name=\"password\" className=\"form-control p_input\" />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Confirm Password</label>\r\n                                            <Field type=\"password\" id=\"password2\" name=\"password2\" className=\"form-control p_input\" />\r\n                                        </div>\r\n                                        <div className=\"text-center\">\r\n                                            <button type=\"submit\" className=\"btn btn-primary btn-block enter-btn mb-0 mt-3\">Register</button>\r\n                                        </div>\r\n                                        <p className=\"sign-up text-center\">Already have an Account?<Link to=\"/login\"> Sign In</Link></p>\r\n                                        <p className=\"terms\">By creating an account you are accepting our<Link to=\"/login\"> Terms & Conditions</Link></p>\r\n                                    </Form>\r\n                                </Formik>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport { Formik, Field, Form } from 'formik';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { resetPassword } from '../../redux/action/authActions';\r\n\r\nconst ForgotPassword = () => {\r\n    let dispatch = useDispatch();\r\n\r\n    const onSubmit = (info) => {\r\n        dispatch(resetPassword({ email: info.email }));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-scroller\">\r\n            <div className=\"container-fluid page-body-wrapper full-page-wrapper\">\r\n                <div className=\"row w-100 m-0\">\r\n                    <div className=\"content-wrapper full-page-wrapper d-flex align-items-center auth login-bg\">\r\n                        <div className=\"card col-lg-4 mx-auto\">\r\n                            <div className=\"card-body px-5 py-5\">\r\n                                <h3 className=\"card-title text-left mb-3\">Reset your password</h3>\r\n                                <Formik initialValues={{\r\n                                    email: ''\r\n                                }}\r\n                                    onSubmit={onSubmit}>\r\n                                    <Form>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Enter your email address so we can reset your password.</label>\r\n                                            <Field id=\"email\" name=\"email\" placeholder=\"input your email...\" className=\"mt-3 form-control p_input\" />\r\n                                        </div>\r\n                                        <div className=\"text-center\">\r\n                                            <button type=\"submit\" className=\"btn btn-primary btn-block enter-btn mb-0\">Send</button>\r\n                                        </div>\r\n                                    </Form>\r\n                                </Formik>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword;","import React, { useState } from \"react\";\r\nimport Avatar from \"react-avatar-edit\";\r\nimport { Modal } from \"reactstrap\";\r\n\r\nconst AvatarEditor = ({ avatar, onChangeAvatar }) => {\r\n    const [src, setSrc] = useState(avatar);\r\n    const [preview, setPreview] = useState(avatar);\r\n    const [isOpenModal, setOpenModal] = useState(false);\r\n\r\n    const onClose = () => {\r\n        setSrc(preview);\r\n        setOpenModal(false);\r\n        onChangeAvatar(preview);\r\n    }\r\n\r\n    const onCrop = (preview) => {\r\n        setPreview(preview);\r\n    }\r\n\r\n    const onOpen = () => {\r\n        setOpenModal(true);\r\n    }\r\n\r\n    const onBeforeFileLoad = (elem) => {\r\n        if (elem.target.files[0].size > 71680) {\r\n            alert(\"File is too big!\");\r\n            elem.target.value = \"\";\r\n        };\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        window.URL = window.URL || window.webkitURL;\r\n        let url = window.URL.createObjectURL(e.target.files[0]);\r\n        // ReactDom.findDOMNode(this.refs.in).value = \"\";\r\n        console.log(\"url is\", url, e.target.files[0]);\r\n        setSrc(url);\r\n        setOpenModal(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                size=\"sm\"\r\n                isOpen={isOpenModal}\r\n                toggle={() => { setOpenModal(!isOpenModal) }}\r\n                centered={false}\r\n                scrollable={false}\r\n                className=\"avatar-modal\"\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h6>Crop your new profile picture</h6>\r\n                    <button type=\"button\" className=\"btn btn-secondary btn-fw\" onClick={onClose}>Close</button>\r\n                </div>\r\n\r\n                <div className=\"modal-body\">\r\n                    <Avatar\r\n                        width={390}\r\n                        height={295}\r\n                        onCrop={onCrop}\r\n                        onClose={onClose}\r\n                        onBeforeFileLoad={onBeforeFileLoad}\r\n                        src={src}\r\n                    />\r\n\r\n                    <div className=\"actions\">\r\n                        <button type=\"button\" className=\"btn btn-primary btn-fw w-100 mt-3\" onClick={onClose}>Apply</button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n\r\n            <div className=\"avatar-wrapper\">\r\n                <img src={src} alt=\"Preview\" className=\"preview-image\" />\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={handleFileChange}\r\n                />\r\n                <button type=\"button\" className=\"btn btn-dark btn-icon-text\" onClick={onOpen}> Edit <i className=\"mdi mdi-file-check btn-icon-append\"></i>\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AvatarEditor;","import React, { useEffect, useState } from 'react';\r\nimport AvatarEditor from '../elements/avatarEditor';\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Formik, Form, Field } from 'formik';\r\n\r\nimport { updateUser } from '../../redux/action/authActions';\r\nimport { UpdateSchema } from '../../schema/auth';\r\nimport axios from '../../api';\r\n\r\nconst Settings = ({ auth }) => {\r\n    const [avatarPath, setAvatarPath] = useState(auth.avatar);\r\n    const [user, setUser] = useState({});\r\n    let dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        axios.get(`/users/${auth.id}`).then(res => {\r\n            setUser({ ...res.data, password: window.atob(res.data.password) });\r\n            // setAvatarPath(user.avatar);\r\n        })\r\n    }, [auth.id])\r\n\r\n    const onSubmit = (info) => {\r\n        console.log(\"avatar is\", avatarPath);\r\n        let userData = {\r\n            id: info.id, email: info.email, password: window.btoa(info.password), firstName: info.firstName, lastName: info.lastName,\r\n            city: info.city, country: info.country, bio: info.bio, walletAddress: info.walletAddress, avatar: avatarPath\r\n        };\r\n        dispatch(updateUser({ id: auth.id, userData: userData }));\r\n    }\r\n\r\n    const onChangeAvatar = (src) => {\r\n        console.log(\"src is\", src)\r\n        setAvatarPath(src);\r\n    }\r\n\r\n    return (\r\n        <div className=\"content-wrapper\">\r\n            <div className=\"col-md-6 grid-margin stretch-card mt-3\">\r\n                {\r\n                    user.avatar ?\r\n                        <AvatarEditor avatar={user.avatar} onChangeAvatar={onChangeAvatar} />\r\n                        : \"\"\r\n                }\r\n\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h4 className=\"card-title\">Profile Details</h4>\r\n                        <Formik initialValues={{\r\n                            firstName: user.firstName,\r\n                            lastName: user.lastName,\r\n                            password: window.btoa(user.password),\r\n                            email: user.email,\r\n                            walletAddress: user.walletAddress,\r\n                            bio: user.bio,\r\n                            city: user.city,\r\n                            country: user.country,\r\n                        }}\r\n                            validationSchema={UpdateSchema}\r\n                            onSubmit={onSubmit}>\r\n                            <Form>\r\n                                <div className=\"form-group row\">\r\n                                    <div className=\"col\">\r\n                                        <label htmlFor=\"fistNmae\">First Name</label>\r\n                                        <Field name=\"firstName\" className=\"form-control\" id=\"firstName\" placeholder={user.firstName} />\r\n                                    </div>\r\n\r\n                                    <div className=\"col\">\r\n                                        <label htmlFor=\"lastName\">Last Name</label>\r\n                                        <Field placeholder={user.lastName} name=\"lastName\" className=\"form-control\" id=\"lastName\" />\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"form-group row\">\r\n                                    <div className=\"col-md-6\">\r\n                                        <label htmlFor=\"email\">Email</label>\r\n                                        <Field placeholder={user.email} type=\"email\" name=\"email\" className=\"form-control\" id=\"email\" />\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-6\">\r\n                                        <label htmlFor=\"walletAddress\">Wallet Address</label>\r\n                                        <Field placeholder={user.walletAddress} name=\"walletAddress\" className=\"form-control\" id=\"walletAddress\" />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group row\">\r\n                                    <div className=\"col\">\r\n                                        <label htmlFor=\"city\">City</label>\r\n                                        <Field placeholder={user.city} name=\"city\" className=\"form-control\" id=\"city\" />\r\n                                    </div>\r\n\r\n                                    <div className=\"col\">\r\n                                        <label htmlFor=\"country\">Country</label>\r\n                                        <Field placeholder={user.country} name=\"country\" className=\"form-control\" id=\"country\" />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group row\">\r\n                                    <div className=\"col\">\r\n                                        <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                                        <Field type=\"password\" placeholder={user.password} name=\"password\" className=\"form-control\" id=\"password1\" />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"bio\">Bio Text</label>\r\n                                    <Field placeholder={user.bio} component=\"textarea\" name=\"bio\" className=\"form-control\" id=\"bio\" />\r\n                                </div>\r\n\r\n                                <button type=\"submit\" className=\"btn btn-primary me-2\">Submit</button>\r\n                                <button className=\"btn btn-dark\">Cancel</button>\r\n                            </Form>\r\n                        </Formik>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nSettings.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(Settings);","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Provider } from 'react-redux';\r\n\r\n// import store\r\nimport store from \"./redux/store\";\r\nimport { setCurrentUser, logoutUser } from \"./redux/action/authActions\";\r\n\r\nimport useEagerConnect from \"./hooks/useEagerConnect\";\r\n\r\n// import layout\r\nimport Layout from \"./components/common/layout\";\r\nimport PrivateRoute from \"./components/common/privateRoute\";\r\n\r\n// import pages\r\nimport Dashboard from \"./components/pages/index\";\r\nimport Admin from \"./components/pages/admin\";\r\nimport Login from \"./components/pages/login\";\r\nimport Register from \"./components/pages/register\";\r\nimport ForgotPassword from \"./components/pages/forgotPassword\";\r\nimport Settings from \"./components/pages/settings\";\r\n\r\n// import utils\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\n\r\n// import style\r\nimport \"./App.scss\";\r\n\r\nif (localStorage.jwtToken) {\r\n  const token = localStorage.jwtToken;\r\n  setAuthToken(token);\r\n  const decoded = jwt_decode(token);\r\n  store.dispatch(setCurrentUser(decoded));\r\n  const currentTime = Date.now() / 1000;\r\n  if (decoded.exp < currentTime) {\r\n    store.dispatch(logoutUser());\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\n\r\n\r\nfunction App() {\r\n  useEagerConnect()\r\n\r\n  return (\r\n    <Provider store={store} >\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Login} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route exact path=\"/forgot-password\" component={ForgotPassword} />\r\n\r\n          <Layout>\r\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n            <PrivateRoute exact path=\"/admin\" component={Admin} />\r\n            <PrivateRoute exact path=\"/settings\" component={Settings} />\r\n          </Layout>\r\n        </Switch>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store/index';\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nimport { getLibrary } from './utils/web3React'\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <App />\r\n    </Web3ReactProvider>\r\n  </Provider>,\r\n\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}